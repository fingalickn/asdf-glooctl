#!/usr/bin/env bash
# shellcheck source=/dev/null
# set -x 
source "$ASDF_DIR/lib/utils.bash"
CACHE_DIR="${TMPDIR:-/tmp}"
CACHE_FILE="${CACHE_DIR}glooctl.releases"
if [ ! -d "${CACHE_DIR}" ]
then
    mkdir -p "${CACHE_DIR}"
fi

trap 'test -d "${TEMP_DIR}" && rm -rf "${TEMP_DIR}"' EXIT

function cache_glooctl_versions {
  if [ ! -f "$CACHE_FILE" ];
  then
    local curl_args=("-sL")
    if [ -n "$ASDF_GITHUB_API_TOKEN" ];
	then 
	  curl_args+=("-H\"Authorization: token $ASDF_GITHUB_API_TOKEN\"")
	fi
	curl -s https://github.com/solo-io/gloo/releases | \
                  grep -oP '(?<=releases/tag/v)[0-9]*.[0-9]*.[0-9]*' | sort --version-sort > "${CACHE_FILE}"
  fi
}

# Determine glooctl version to download
function which_glooctl_version {
	cache_glooctl_versions
	if [ -z "$ASDF_INSTALL_VERSION" ] || [ "$ASDF_INSTALL_VERSION" == "latest" ];
	then
	GLOOCTL_VERSION="$(sort --version-sort < "${CACHE_FILE}" | tail -n1)"
	GLOOCTL_VERSION="${GLOOCTL_VERSION##*/}"
	else
	  GLOOCTL_VERSION="${ASDF_INSTALL_VERSION}"
	fi
	echo "${GLOOCTL_VERSION}"
}

function install {	
	echo "Downloading and installing glooctl $(which_glooctl_version)"
	curl -sL https://run.solo.io/gloo/install |\
	   GLOOCTL_VERSION="$(which_glooctl_version)" sh - &
	wait 
	mv "$HOME"/.gloo/* "${ASDF_INSTALL_PATH}"
	rm -rf "$HOME"/.gloo
}

function list-all {
	cache_glooctl_versions
	tr '\n' ' ' < "${CACHE_FILE}"
}

function uninstall {
   rm -rf "${ASDF_INSTALL_PATH}"
}

case "$(basename "${0}")" in
    list-all) list-all
              ;;
    install) install
             ;;
    uninstall) uninstall ;;
esac